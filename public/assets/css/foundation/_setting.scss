@charset "utf-8";

//==========================================================================
//_setting.scss
//==========================================================================

//-----------------------------------------------------------------
//var
//-----------------------------------------------------------------
//breakpoint
$xxs: 320;
$xs: 375;
$sm: 768;
$md: 1025;
$lg: 1280;
$xl: 1440;
$xxl: 1920;

$xxs-1: $xs - 1;
$xs-1: $xs - 1;
$sm-1: $sm - 1;
$md-1: $md - 1;
$lg-1: $lg - 1;
$xl-1: $xl - 1;
$xxl-1: $xxl - 1;

$xxsMin: 'min-width:' + $xxs + 'px';
$xsMin: 'min-width:' + $xs + 'px';
$smMin: 'min-width:' + $sm + 'px';
$mdMin: 'min-width:' + $md + 'px';
$lgMin: 'min-width:' + $lg + 'px';
$xlMin: 'min-width:' + $xl + 'px';
$xxlMin: 'min-width:' + $xxl + 'px';

$xxsMax: 'max-width:' + $xxs-1 + 'px';
$xsMax: 'max-width:' + $xs-1 + 'px';
$smMax: 'max-width:' + $sm-1 + 'px';
$mdMax: 'max-width:' + $md-1 + 'px';
$lgMax: 'max-width:' + $lg-1 + 'px';
$xlMax: 'max-width:' + $xl-1 + 'px';
$xxlMax: 'max-width:' + $xxl-1 + 'px';

//design width
$xxsDesignW: $xxs;
$xsDesignW: $xs;
$smDesignW: $sm;
$mdDesignW: $md;
$lgDesignW: $lg;
$xlDesignW: $xl;
$xxlDesignW: $xxl;

//font
$font-serif: 'Zen Old Mincho', serif;
$font-sans-serif: 'Zen Kaku Gothic Antique', sans-serif;
$font-ja: 'Zen Kaku Gothic Antique', sans-serif;
$font-en: 'DM Serif Display', serif;

//key color
$colorMain: #202020;
$colorPlain: #202020;
$colorBase: #202020;
$colorFont: #f0f0f0;
$colorPrimary: gold;
$colorSecondary: rgb(254, 169, 228);
$colorFocus: #006eff;
$colorBorder: #e9e9e9;
$colorGray01: #dcdcdc;
$colorGray02: #909090;

//margin
$margin-xxs: 10px;
$margin-xs: 20px;
$margin-sm: 40px;
$margin-md: 60px;
$margin-lg: 80px;
$margin-xl: 100px;
$margin-xxl: 120px;

//easing
$easeInSine: cubic-bezier(0.47, 0, 0.745, 0.715);
$easeOutSine: cubic-bezier(0.39, 0.575, 0.565, 1);
$easeInOutSine: cubic-bezier(0.445, 0.05, 0.55, 0.95);
$easeInQuad: cubic-bezier(0.55, 0.085, 0.68, 0.53);
$easeOutQuad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
$easeInCubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);
$easeOutCubic: cubic-bezier(0.215, 0.61, 0.355, 1);
$easeInOutCubic: cubic-bezier(0.645, 0.045, 0.355, 1);
$easeInQuart: cubic-bezier(0.895, 0.03, 0.685, 0.22);
$easeOutQuart: cubic-bezier(0.165, 0.84, 0.44, 1);
$easeInOutQuart: cubic-bezier(0.77, 0, 0.175, 1);
$easeInQuint: cubic-bezier(0.755, 0.05, 0.855, 0.06);
$easeOutQuint: cubic-bezier(0.23, 1, 0.32, 1);
$easeInOutQuint: cubic-bezier(0.86, 0, 0.07, 1);
$easeInExpo: cubic-bezier(0.95, 0.05, 0.795, 0.035);
$easeOutExpo: cubic-bezier(0.19, 1, 0.22, 1);
$easeInOutExpo: cubic-bezier(1, 0, 0, 1);
$easeInCirc: cubic-bezier(0.6, 0.04, 0.98, 0.335);
$easeOutCirc: cubic-bezier(0.075, 0.82, 0.165, 1);
$easeInOutCirc: cubic-bezier(0.785, 0.135, 0.15, 0.86);
$easeInBack: cubic-bezier(0.6, -0.28, 0.735, 0.045);
$easeOutBack: cubic-bezier(0.175, 0.885, 0.32, 1.275);
$easeInOutBack: cubic-bezier(0.68, -0.55, 0.265, 1.55);


//-----------------------------------------------------------------
//mixin
//-----------------------------------------------------------------

//vw
@function xxs_vw($size, $viewport: $xxsDesignW) {
  $rate: calc(100 / $viewport);
  @return $rate * $size * 1vw;
}

@function xs_vw($size, $viewport: $xsDesignW) {
  $rate: calc(100 / $viewport);
  @return $rate * $size * 1vw;
}

@function sm_vw($size, $viewport: $smDesignW) {
  $rate: calc(100 / $viewport);
  @return $rate * $size * 1vw;
}

@function md_vw($size, $viewport: $mdDesignW) {
  $rate: calc(100 / $viewport);
  @return $rate * $size * 1vw;
}

@function lg_vw($size, $viewport: $lgDesignW) {
  $rate: calc(100 / $viewport);
  @return $rate * $size * 1vw;
}

@function xl_vw($size, $viewport: $xlDesignW) {
  $rate: calc(100 / $viewport);
  @return $rate * $size * 1vw;
}

// 1280px~375px / BP:768px
@function multi($min, $max, $xsDesignW:375, $lgDesignW:1280) {
  $sizeMin : $min + px;
  $sizeMax : $max + px;
  $a:calc(($max - $min)/($lgDesignW - $xsDesignW));
  $xsViewW : $xsDesignW + px;
  $x : calc(100vw - $xsViewW);
  $multi-size : calc(($x * $a) + $min);
  @return clamp($sizeMin, calc($multi-size), $sizeMax);
}

@mixin w_pc($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  width: clamp($min, lg_vw($sizeMax), $max);
}

@mixin h_pc($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  height: clamp($min, lg_vw($sizeMax), $max);
}

@mixin fz_pc($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  font-size: clamp($min, lg_vw($sizeMax), $max);
}
@mixin w_tab($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  width: clamp($min, sm_vw($sizeMax), $max);
}

@mixin h_tab($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  height: clamp($min, sm_vw($sizeMax), $max);
}

@mixin fz_tab($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  font-size: clamp($min, sm_vw($sizeMax), $max);
}
@mixin w_sp($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  width: clamp($min, xs_vw($sizeMax), $max);
}

@mixin h_sp($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  height: clamp($min, xs_vw($sizeMax), $max);
}

@mixin fz_sp($sizeMin, $sizeMax) {
  $min : $sizeMin + px;
  $max : $sizeMax + px;
  font-size: clamp($min, xs_vw($sizeMax), $max);
}



//base easing
@mixin transition {
  transition: all .3s $easeOutCubic;
}

//media query
@mixin xsMin {

  @media print,
  screen and ($xsMin) {
    @content;
  }
}

@mixin smMin {

  @media print,
  screen and ($smMin) {
    @content;
  }
}

@mixin mdMin {

  @media print,
  screen and ($mdMin) {
    @content;
  }
}

@mixin lgMin {

  @media print,
  screen and ($lgMin) {
    @content;
  }
}

@mixin xlMin {

  @media print,
  screen and ($xlMin) {
    @content;
  }
}

@mixin xsMax {
  @media screen and ($xsMax) {
    @content;
  }
}

@mixin smMax {
  @media screen and ($smMax) {
    @content;
  }
}

@mixin mdMax {
  @media screen and ($mdMax) {
    @content;
  }
}

@mixin lgMax {
  @media screen and ($lgMax) {
    @content;
  }
}

@mixin xlMax {
  @media screen and ($xlMax) {
    @content;
  }
}

@mixin xxlMax {
  @media screen and ($xxlMax) {
    @content;
  }
}

@mixin max-screen($breakpoint) {
  @media screen and (max-width: $breakpoint) {
    @content;
  }
}

@mixin min-screen($breakpoint) {

  @media print,
  screen and (min-width: $breakpoint) {
    @content;
  }
}

@mixin screen($breakpoint-min, $breakpoint-max) {
  @media screen and (min-width: $breakpoint-min) and (max-width: $breakpoint-max) {
    @content;
  }
}

/* 769～1200 */
@mixin tab-screen {
  @media screen and ($smMin) and ($lgMax) {
    @content;
  }
}

//hover
@mixin hover {
  @include smMin {
    .is-view-pc & {
      &:hover {
        @content;
      }
    }
  }
}


//-----------------------------------------------------------------
//anime
//-----------------------------------------------------------------
//fadeIn
@mixin animate-fadeIn($duration, $delay) {
  opacity: 0;
  transition-duration: $duration;
  transition-delay: $delay;
}

@mixin animated-fadeIn {
  opacity: 1;
}

//fadeInUp
@mixin animate-fadeInUp($duration, $delay) {
  opacity: 0;
  transform: translateY(50px);
  transition-duration: $duration;
  transition-delay: $delay;
}

@mixin animated-fadeInUp {
  opacity: 1;
  transform: translateY(0);
}

//fadeInLeft
@mixin animate-fadeInLeft($duration, $delay) {
  opacity: 0;
  transform: translateX(50px);
  transition-duration: $duration;
  transition-delay: $delay;
}

@mixin animated-fadeInLeft {
  opacity: 1;
  transform: translateX(0);
}

//fadeInRight
@mixin animate-fadeInRight($duration, $delay) {
  opacity: 0;
  transform: translateX(-50px);
  transition-duration: $duration;
  transition-delay: $delay;
}

@mixin animated-fadeInRight {
  opacity: 1;
  transform: translateX(0);
}